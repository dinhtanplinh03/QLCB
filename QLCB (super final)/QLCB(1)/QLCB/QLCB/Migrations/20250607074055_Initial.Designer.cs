// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QLCB.Models;

#nullable disable

namespace QLCB.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250607074055_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QLCB.Models.ChungNhan", b =>
                {
                    b.Property<string>("MaChungNhan")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayCap")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhanVienMaNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("TenChungNhan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaChungNhan");

                    b.HasIndex("NhanVienMaNhanVien");

                    b.ToTable("ChungNhans");
                });

            modelBuilder.Entity("QLCB.Models.ChuyenBay", b =>
                {
                    b.Property<string>("MaChuyenBay")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("MaMayBay")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("MaSanBayDen")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("MaSanBayDi")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("SoGhe")
                        .HasColumnType("int");

                    b.Property<string>("TenChuyenBay")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ThoiGianDen")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKhoiHanh")
                        .HasColumnType("datetime2");

                    b.HasKey("MaChuyenBay");

                    b.HasIndex("MaMayBay");

                    b.HasIndex("MaSanBayDen");

                    b.HasIndex("MaSanBayDi");

                    b.ToTable("ChuyenBays");
                });

            modelBuilder.Entity("QLCB.Models.HanhKhach", b =>
                {
                    b.Property<int>("MaHanhKhach")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHanhKhach"));

                    b.Property<string>("CMND")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("MaHanhKhach");

                    b.ToTable("HanhKhachs");
                });

            modelBuilder.Entity("QLCB.Models.MayBay", b =>
                {
                    b.Property<string>("MaMayBay")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("LoaiMayBay")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TamBay")
                        .HasColumnType("int");

                    b.HasKey("MaMayBay");

                    b.ToTable("MayBays");
                });

            modelBuilder.Entity("QLCB.Models.NhanVien", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("Luong")
                        .HasColumnType("real");

                    b.HasKey("MaNhanVien");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("QLCB.Models.PhanCong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChuyenBayMaChuyenBay")
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("MaChuyenBay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayPhanCong")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhanVienMaNhanVien")
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.HasIndex("ChuyenBayMaChuyenBay");

                    b.HasIndex("NhanVienMaNhanVien");

                    b.ToTable("PhanCongs");
                });

            modelBuilder.Entity("QLCB.Models.SanBay", b =>
                {
                    b.Property<string>("MaSanBay")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("QuocGia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenSanBay")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ThanhPho")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaSanBay");

                    b.ToTable("SanBays");
                });

            modelBuilder.Entity("QLCB.Models.VeBay", b =>
                {
                    b.Property<string>("MaVeBay")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChungNhanMaChungNhan")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ChuyenBayMaChuyenBay")
                        .HasColumnType("nvarchar(5)");

                    b.Property<decimal>("GiaVe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("HanhKhachMaHanhKhach")
                        .HasColumnType("int");

                    b.Property<string>("MaChungNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaChuyenBay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaHanhKhach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaMayBay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaPhanCong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSanBayDen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSanBayDi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MayBayMaMayBay")
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime>("NgayDatVe")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhanVienMaNhanVien")
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("PhanCongId")
                        .HasColumnType("int");

                    b.Property<string>("SanBayDenMaSanBay")
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("SanBayDiMaSanBay")
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("MaVeBay");

                    b.HasIndex("ChungNhanMaChungNhan");

                    b.HasIndex("ChuyenBayMaChuyenBay");

                    b.HasIndex("HanhKhachMaHanhKhach");

                    b.HasIndex("MayBayMaMayBay");

                    b.HasIndex("NhanVienMaNhanVien");

                    b.HasIndex("PhanCongId");

                    b.HasIndex("SanBayDenMaSanBay");

                    b.HasIndex("SanBayDiMaSanBay");

                    b.ToTable("VeBays");
                });

            modelBuilder.Entity("QLCB.Models.ChungNhan", b =>
                {
                    b.HasOne("QLCB.Models.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienMaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QLCB.Models.ChuyenBay", b =>
                {
                    b.HasOne("QLCB.Models.MayBay", "MayBay")
                        .WithMany("ChuyenBays")
                        .HasForeignKey("MaMayBay")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLCB.Models.SanBay", "SanBayDen")
                        .WithMany("ChuyenBaysDen")
                        .HasForeignKey("MaSanBayDen")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QLCB.Models.SanBay", "SanBayDi")
                        .WithMany("ChuyenBaysDi")
                        .HasForeignKey("MaSanBayDi")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MayBay");

                    b.Navigation("SanBayDen");

                    b.Navigation("SanBayDi");
                });

            modelBuilder.Entity("QLCB.Models.PhanCong", b =>
                {
                    b.HasOne("QLCB.Models.ChuyenBay", "ChuyenBay")
                        .WithMany()
                        .HasForeignKey("ChuyenBayMaChuyenBay");

                    b.HasOne("QLCB.Models.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienMaNhanVien");

                    b.Navigation("ChuyenBay");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QLCB.Models.VeBay", b =>
                {
                    b.HasOne("QLCB.Models.ChungNhan", "ChungNhan")
                        .WithMany()
                        .HasForeignKey("ChungNhanMaChungNhan");

                    b.HasOne("QLCB.Models.ChuyenBay", "ChuyenBay")
                        .WithMany()
                        .HasForeignKey("ChuyenBayMaChuyenBay");

                    b.HasOne("QLCB.Models.HanhKhach", "HanhKhach")
                        .WithMany()
                        .HasForeignKey("HanhKhachMaHanhKhach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLCB.Models.MayBay", "MayBay")
                        .WithMany()
                        .HasForeignKey("MayBayMaMayBay");

                    b.HasOne("QLCB.Models.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienMaNhanVien");

                    b.HasOne("QLCB.Models.PhanCong", "PhanCong")
                        .WithMany()
                        .HasForeignKey("PhanCongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLCB.Models.SanBay", "SanBayDen")
                        .WithMany()
                        .HasForeignKey("SanBayDenMaSanBay");

                    b.HasOne("QLCB.Models.SanBay", "SanBayDi")
                        .WithMany()
                        .HasForeignKey("SanBayDiMaSanBay");

                    b.Navigation("ChungNhan");

                    b.Navigation("ChuyenBay");

                    b.Navigation("HanhKhach");

                    b.Navigation("MayBay");

                    b.Navigation("NhanVien");

                    b.Navigation("PhanCong");

                    b.Navigation("SanBayDen");

                    b.Navigation("SanBayDi");
                });

            modelBuilder.Entity("QLCB.Models.MayBay", b =>
                {
                    b.Navigation("ChuyenBays");
                });

            modelBuilder.Entity("QLCB.Models.SanBay", b =>
                {
                    b.Navigation("ChuyenBaysDen");

                    b.Navigation("ChuyenBaysDi");
                });
#pragma warning restore 612, 618
        }
    }
}
